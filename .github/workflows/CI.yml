name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  SOLANA_VERSION: 2.2.19
  ANCHOR_VERSION: 0.31.1

jobs:
  typecheck:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run type check
        run: bun run typecheck

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run linter
        run: bun run lint

  format:
    name: Check Code Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check formatting
        run: bun run fmt:check

  build-app:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [typecheck]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build application
        run: bun run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/

  build-anchor:
    name: Build Anchor Program
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Solana
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/solana
            ~/.local/share/solana
          key: ${{ runner.os }}-solana-${{ env.SOLANA_VERSION }}

      - uses: metadaoproject/setup-anchor@v3.1
        with:
          anchor-version: ${{ env.ANCHOR_VERSION }}
          solana-cli-version: ${{ env.SOLANA_VERSION }}


      - name: Cache Anchor
        uses: actions/cache@v4
        with:
          path: |
            ~/.avm
            ~/.cargo/bin/anchor
          key: ${{ runner.os }}-anchor-${{ env.ANCHOR_VERSION }}

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            anchor/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build Anchor program
        run: bun run anchor-build

      - name: Upload Anchor artifacts
        uses: actions/upload-artifact@v4
        with:
          name: anchor-build
          path: |
            anchor/target/deploy/
            anchor/target/types/
            anchor/target/idl/

  # Check that IDL is up to date
  check-idl:
    name: Check IDL is Current
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Solana
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/solana
            ~/.local/share/solana
          key: ${{ runner.os }}-solana-${{ env.SOLANA_VERSION }}

      - uses: actions/cache@v4
        with:
          path: |
            ~/.avm
            ~/.cargo/bin/anchor
          key: ${{ runner.os }}-anchor-${{ env.ANCHOR_VERSION }}

      - uses: metadaoproject/setup-anchor@v3.2
        with:
          anchor-version: ${{ env.ANCHOR_VERSION }}
          solana-cli-version: ${{ env.SOLANA_VERSION }}

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            anchor/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - run: bun install --frozen-lockfile
      - run: bun fmt

      - name: Build and check IDL
        run: |
          bun run anchor-build
          if ! git diff --exit-code anchor/target/idl/; then
            echo "::error::IDL files are out of date. Please run 'bun run anchor-build' and commit the changes."
            exit 1
          fi